la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- ZIGPmm(y, phi0, phi, la, th)
summary.ZIGP(result)
digits = 4
phi0 <- c(round(result$phi0, digits), round(result$std_phi0, digits), round(result$phi0_t_val, digits))
phi <- c(tibble(round(object$phi, digits)), tibble(round(object$std_phi, digits)), tibble(round(object$phi_t_val, digits)))
phi <- c(tibble(round(result$phi, digits)), tibble(round(result$std_phi, digits)), tibble(round(result$phi_t_val, digits)))
la <- c(tibble(round(result$la, digits)), tibble(round(result$std_la, digits)), tibble(round(result$la_t_val, digits)))
th <- c(tibble(round(result$th, digits)), tibble(round(result$std_th, digits)), tibble(round(result$th_t_val, digits)))
phi
rbind(phi0, phi, la, th)
result$phi
phi <- c(round(result$phi, digits), round(result$std_phi, digits), round(result$phi_t_val, digits))
la <- c(round(result$la, digits), round(result$std_la, digits), round(result$la_t_val, digits))
th <- c(round(result$th, digits), round(result$std_th, digits), round(result$th_t_val, digits))
rbind(phi0, phi, la, th)
cbind(phi0, phi, la, th)
phi <- c(tibble(round(result$phi, digits)), tibble(round(result$std_phi, digits)), tibble(round(result$phi_t_val, digits)))
la <- c(tibble(round(result$la, digits)), tibble(round(result$std_la, digits)), tibble(round(result$la_t_val, digits)))
th <- c(tibble(round(result$th, digits)), tibble(round(result$std_th, digits)), tibble(round(result$th_t_val, digits)))
cbind(phi0, phi, la, th)
rbind(phi0, phi, la, th)
phi0
rbind( phi, la, th)
cbind( phi, la, th)
tibble(round(result$phi, digits))
phi
phi0 <- c(round(result$phi0, digits), round(result$std_phi0, digits), round(result$phi0_t_val, digits))
phi <- c(round(result$phi, digits), round(result$std_phi, digits), round(result$phi_t_val, digits))
la <- c(round(result$la, digits), round(result$std_la, digits), round(result$la_t_val, digits))
th <- c(round(result$th, digits), round(result$std_th, digits), round(result$th_t_val, digits))
tibble(phi)
matrix(phi , ncol=m)
phi
m
matrix(phi ,3, m)
matrix(phi , m, 3)
cbind(phi0, matrix(phi , m, 3), matrix(la , m, 3), matrix(th , m, 3))
phi0
rbind(phi0, matrix(phi , m, 3), matrix(la , m, 3), matrix(th , m, 3))
la
th
matrix(phi , m, 3)
phi <- matrix(phi, m, 3)
la <- matrix(la, m, 3)
th <- matrix(th, m, 3)
rbind(phi0, phi, la, th)
phi
c(phi)
phi<- c(phi)
la<- c(la)
th<- c(th)
rbind(phi0, phi, la, th)
phi0
phi
phi <- matrix(phi, m, 3)
la <- matrix(la, m, 3)
th <- matrix(th, m, 3)
phi
rbind(phi0, phi, la, th)
document()
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- ZIGPmm(y, phi0, phi, la, th)
summary.ZIGP(result)
phi0
phi
digits = 4
phi0 <- c(round(result$phi0, digits), round(result$std_phi0, digits), round(result$phi0_t_val, digits))
phi <- c(round(result$phi, digits), round(result$std_phi, digits), round(result$phi_t_val, digits))
la <- c(round(result$la, digits), round(result$std_la, digits), round(result$la_t_val, digits))
th <- c(round(result$th, digits), round(result$std_th, digits), round(result$th_t_val, digits))
phi
rbind(phi, la, th)
phi <- matrix(phi, m, 3)
la <- matrix(la, m, 3)
th <- matrix(th, m, 3)
phi
rbind(phi, la, th)
phi0
phi[1,]
phi
rbind(phi, la, th)
paste(phi_, 1)
paste("phi_", 1)
paste("phi_", 1) <- phi[1,]
phi[1,]
phi_1
paste("phi_", 1)
paste("phi_", 1, sep = '')
paste("phi_", 1, sep = '') <- phi[1,]
c(phi[1,])
paste("phi_", 1, sep = '') <- c(phi[1,])
paste("phi", 1, sep = '_')
phi[1,]
phi <- matrix(phi, m, 3)
phi
paste("phi", 1, sep = '_') <- phi[1,]
p1 = phi[1,]
paste("phi", 1, sep = '_') <- p1
p1
paste("phi", 1, sep = '_') = p1
tibble(round(result$phi, digits))
phi <- c(tibble(round(result$phi, digits)), tibble(round(result$std_phi, digits)), tibble(round(result$phi_t_val, digits)))
la <- c(tibble(round(result$la, digits)), tibble(round(result$std_la, digits)), tibble(round(result$la_t_val, digits)))
th <- c(tibble(round(result$th, digits)), tibble(round(result$std_th, digits)), tibble(round(result$th_t_val, digits)))
phi
rbind(phi0, phi, la, th)
phi[i,]
phi[1,]
phi0 <- c(round(result$phi0, digits), round(result$std_phi0, digits), round(result$phi0_t_val, digits))
phi <- c(round(result$phi, digits), round(result$std_phi, digits), round(result$phi_t_val, digits))
la <- c(round(result$la, digits), round(result$std_la, digits), round(result$la_t_val, digits))
th <- c(round(result$th, digits), round(result$std_th, digits), round(result$th_t_val, digits))
phi
phi <- matrix(phi, m, 3)
la <- matrix(la, m, 3)
th <- matrix(th, m, 3)
phi
phi[1,]
paste("phi", 1, sep = '_')
phi_1
p1 = phi[1,]
paste("phi", 1, sep = '_') = p1
assign(paste("phi", 1, sep = '_'), p1)
phi_1
assign(paste("phi", 1, sep = '_'), phi[1,])
phi_1
la[1,]
for (i in 1:3*m)
{
if (i <= m)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m < i <= 2*m)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m < i <= 3*m)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
m
for (i in 1:3*m)
{
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m < i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m < i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
3*m
for (i in 1:(3*m))
{
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m < i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m < i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
for (i in 1:(3*m))
{
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m < i & i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m < i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
for (i in 1:(3*m))
{
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m < i & i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m < i & i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
phi
phi_1
la_1
rbind(phi0, phi_1, la_1, th_1)
rbind(phi0, phi, la, th)
coef_zigp <- rbind(phi0, phi, la, th)
coef_zigp
colnames(coef_zigp) <- c("Estimate", "Std. Error", "t value")
coef_zigp
coef_zigp[1,]
for (i in 1:(3*m+1))
{
if (i = 1)
{ assign("phi0", coef_zigp[i,]) }
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), coef_zigp[i,]) }
if (m < i & i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), coef_zigp[i,]) }
if (2*m < i & i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), coef_zigp[i,]) }
}
for (i in 1:(3*m+1))
{
if (i = 1)
{ assign("phi0", coef_zigp[i,]) }
if (i < m+1)
{ assign(paste("phi", i, sep = '_'), coef_zigp[i,]) }
if (m < i & i < 2*m+1)
{ assign(paste("la", i-m, sep = '_'), coef_zigp[i,]) }
if (2*m < i & i < 3*m+1)
{ assign(paste("th", i-2*m, sep = '_'), coef_zigp[i,]) }
}
for (i in 1:(3*m+1))
{
if (i = 1)
{ assign("phi0", coef_zigp[i,]) }
if (i >1 & i < m+2)
{ assign(paste("phi", i-1, sep = '_'), coef_zigp[i,]) }
if (m+1 < i & i < 2*m+2)
{ assign(paste("la", i-m-1, sep = '_'), coef_zigp[i,]) }
if (2*m+1 < i & i < 3*m+2)
{ assign(paste("th", i-2*m-1, sep = '_'), coef_zigp[i,]) }
}
3*m+1
1:(3*m+1)
phi_1
3*m+1
for (i in 1:(3*m+1))
{
if (i == 1)
{ assign("phi0", coef_zigp[i,]) }
if (I > 1 & i < m+2)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m+1 < i & i < 2*m+2)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m+1 < i & i < 3*m+2)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
for (i in 1:(3*m+1))
{
if (i == 1)
{ assign("phi0", coef_zigp[i,]) }
if (i > 1 & i < m+2)
{ assign(paste("phi", i, sep = '_'), phi[i,]) }
if (m+1 < i & i < 2*m+2)
{ assign(paste("la", i-m, sep = '_'), la[i-m,]) }
if (2*m+1 < i & i < 3*m+2)
{ assign(paste("th", i-2*m, sep = '_'), th[i-2*m,]) }
}
for (i in 1:(3*m+1))
{
if (i == 1)
{ assign("phi0", coef_zigp[i,]) }
if (i > 1 & i < m+2)
{ assign(paste("phi", i-1, sep = '_'), coef_zigp[i,]) }
if (m+1 < i & i < 2*m+2)
{ assign(paste("la", i-m-1, sep = '_'), coef_zigp[i,]) }
if (2*m+1 < i & i < 3*m+2)
{ assign(paste("th", i-2*m-1, sep = '_'), coef_zigp[i,]) }
}
phi_1
phi_2
phi
rbind(phi0, phi_1, la_1, th_1)
rbind(phi0, phi_1, phi_2, la_1, th_1)
phi
la
for (i in 1:m)
{
phi_rowname <- list()
la_rowname <- list()
th_rowname <- list()
if (i < m+1)
{
p_rowname = paste("phi", i, sep = '_')
phi_rowname <- append(phi_rowname, p_rowname)
l_rowname = paste("la", i, sep = '_')
la_rowname <- append(la_rowname, l_rowname)
t_rowname = paste("th", i, sep = '_')
th_rowname <- append(th_rowname, t_rowname)
}
}
th_rowname
i = 1
while (i < m+1)
{
p_rowname = paste("phi", i, sep = '_')
phi_rowname <- append(phi_rowname, p_rowname)
l_rowname = paste("la", i, sep = '_')
la_rowname <- append(la_rowname, l_rowname)
t_rowname = paste("th", i, sep = '_')
th_rowname <- append(th_rowname, t_rowname)
i = i + 1
}
phi_rowname <- list()
la_rowname <- list()
th_rowname <- list()
i = 1
while (i < m+1)
{
p_rowname = paste("phi", i, sep = '_')
phi_rowname <- append(phi_rowname, p_rowname)
l_rowname = paste("la", i, sep = '_')
la_rowname <- append(la_rowname, l_rowname)
t_rowname = paste("th", i, sep = '_')
th_rowname <- append(th_rowname, t_rowname)
i = i + 1
}
th_rowname
phi_rowname <- c()
la_rowname <- c()
th_rowname <- c()
i = 1
while (i < m+1)
{
p_rowname = paste("phi", i, sep = '_')
phi_rowname <- append(phi_rowname, p_rowname)
l_rowname = paste("la", i, sep = '_')
la_rowname <- append(la_rowname, l_rowname)
t_rowname = paste("th", i, sep = '_')
th_rowname <- append(th_rowname, t_rowname)
i = i + 1
}
th_rowname
rownames(phi) <- phi_rowname
rownames(la) <- la_rowname
rownames(th) <- th_rowname
phi
rbind(phi0, phi, la, th)
document()
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- ZIGPmm(y, phi0, phi, la, th)
summary.ZIGP(result)
document()
summary.ZIGP(result)
file.rename("R/summary.R", "R/summary.ZIGP.R")
document()
file.rename("R/summary.LTNmm.R", "R/summary.LTN.R")
document()
library(devtools)
usethis::use_r("summary.ZTB.R")
document()
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m, th0, n)
th = 0.1
result = ZTB1mm(y, m, th)
summary.ZTB(result)
document()
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m, th0, n)
th = 0.1
result = ZTB1mm(y, m, th)
summary.ZTB(result)
document()
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m, th0, n)
th = 0.1
result = ZTB1mm(y, m, th)
summary.ZTB(result)
document()
file.rename("R/summary.R", "R/summary.ZTB.R")
document()
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
th = 0.1
result = ZTB2mm(y, m, th)
summary.ZTB(result)
