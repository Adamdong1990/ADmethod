for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
N=500; a = 5; n = 200; mu = 7; si2 = 4
RES = matrix(0,N,5)
for(i in 1:N)
{
y = LTN_sample(a, mu, si2, n)
RES[i,] = ltnmm(a, mu, si2, y)
}
MRES = apply(RES,2,mean)
MRES
LTNell(5,7,4,3)
usethis::use_r("MZIGPell")
document()
MZIGPell(0.5,1,0.1,7)
document()
ltnmm(5,7,4,3)
document()
ltnmm(5,7,4,3)
document()
documnet()
document()
MZIGPell(0.5,1,0.1,7)
y = matrix(7,1,1); MZIGPell(0.5,1,0.1,y)
document()
y = matrix(7,1,1); MZIGPell(0.5,1,0.1,y)
usethis::use_r("CZIGPmm")
document()
y = matrix(7,1,1); CZIGPmm(0.5,1,0.1,y)
document()
document()
file.create("/demo/ZIGP-demo.r")
file.create("ZIGP-demo.r")
file.create("demo/ZIGP-demo.r")
remove("ZIGP-demo.r")
file.remove("ZIGP-demo.r")
N=500
RES = matrix(0,N,204)
for(t in 1:N)
{
n = 300
phi0 = 0.2
la0 = rep(7,100)
th0 = rep(0.3,100)
y = MZIGP_sample(phi0,la0,th0,n)
phi = 0.5
la = rep(1,100)
th = rep(0.1,100)
RES[t,] = CZIGPmm(phi, la, th, y)
}
MRES = apply(RES,2,mean)
MRES
MZIGP_sample <- function(phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
X <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X[,j]<- sample(a,n,P[,j],replace=TRUE)
}
z <- sample(c(0,1),n,c(phi,1-phi),replace=TRUE)
zz <- matrix(z,n,m)
y <- zz*X
return(y)
}
N=500
RES = matrix(0,N,204)
for(t in 1:N)
{
n = 300
phi0 = 0.2
la0 = rep(7,100)
th0 = rep(0.3,100)
y = MZIGP_sample(phi0,la0,th0,n)
phi = 0.5
la = rep(1,100)
th = rep(0.1,100)
RES[t,] = CZIGPmm(phi, la, th, y)
}
MRES = apply(RES,2,mean)
MRES
file.rename("demo.r", "ltn-demo.r")
file.rename("demo/demo.r", "demo/ltn-demo.r")
usethis::use_r("PETell")
document()
LG_sample = function(n,theta)
{
p = length(theta)
A = matrix(0,n,p)
r = rpois(n,0.1)
z = rnorm(n,0,1)
s = exp(1+0.3*z)
y = rep(0,n)
for(i in 1:n)
{
A[i,] = runif(p,min=0,max=0.1)
la = r[i] + s[i]*exp(-sum(A[i,]*theta))
y[i] = rpois(1, la)
}
return(list(y=y,A=A,s=s,r=r))
}
n=300
theta1=c(3,3,-4,-4,0,0,2,2,0.5,0.5)
theta = c(theta1,theta1)
yy = LG_sample(n,theta)
y = yy$y
A = yy$A
s = yy$s
r = yy$r
ell(theta,y,A,s,r)
usethis::use_r("PETmm")
document()
file.create("demo/PET-demo.r")
LG_sample = function(n,theta)
{
p = length(theta)
A = matrix(0,n,p)
r = rpois(n,0.1)
z = rnorm(n,0,1)
s = exp(1+0.3*z)
y = rep(0,n)
for(i in 1:n)
{
A[i,] = runif(p,min=0,max=0.1)
la = r[i] + s[i]*exp(-sum(A[i,]*theta))
y[i] = rpois(1, la)
}
return(list(y=y,A=A,s=s,r=r))
}
N = 500
RES = matrix(0,N,30)
for(i in 1:N)
{
n = 500
theta1=rep(0.5,10)
theta2=rep(0.8,10)
theta3=rep(0.2,10)
theta = c(theta1,theta2,theta3)
p = length(theta)
yy = LG_sample(n,theta)
y = yy$y; A = yy$A; s = yy$s; r = yy$r
n = length(y)
theta = rep(0.1,p)
k=1
error = 3
RES[i,] = PETmm(theta,y,A,s,r)
}
MRES = apply(RES,2,mean)
MRES
document()
usethis::use_r("IIICell")
file.rename("IIICell","IC2ell")
file.rename("IIICell.r","IC2ell.r")
file.rename("IIICell.r","IC2ell.r")
file.rename("R/IIICell.r","R/IC2ell.r")
document()
usethis::use_r("IC2mm.r")
document()
document()
y=c(4,1); theta=c(3,-4);s=c(3.7, 3.8); r=c(0,0)
aa = c(0.029, 0.027, 0.007, 0.06,  0.006, 0.03, 0.009, 0.026)
A=matrix(aa,2)
PETell(theta,y,A,s,r)
y=c(4,1); theta=c(3,-4);s=c(3.7, 3.8); r=c(0,0)
aa = c(0.029, 0.027, 0.007, 0.06)
A=matrix(aa,2)
PETell(theta,y,A,s,r)
PETmm(theta,y,A,s,r)
document()
document()
document()
alpha = matrix(1,1,1); p = 1
IC2ell(alpha,p)
document()
L = c(0.5, 2); R = c(1, 3)
IC2ell(L, R)
IC2ell(L, R)
L = c(0.5, 2); R = c(1, 3)
IC2ell(L, R)
IC2ell(L, R)
L = c(0.5, 2); R = c(1, 3)
IC2ell(L, R)
IC2ell <- function(L,R)
{
LR = c(L,R)
ss = sort(LR)
s = unique(ss)
m = length(s)
n = length(L)
alpha = matrix(0,n,m)
for(i in 1:n)
{
alpha[i,] = (s>L[i])*(s<=R[i])
}
p = rep(1/m,m)
pp =  matrix(rep(p,each=n),n,m)
el =  sum( log( rowSums(alpha*pp) ) )
return(el)
}
L = c(0.5, 2); R = c(1, 3)
IC2ell(L, R)
document()
rm(list=c("IC2ell"))
document()
L = c(0.5, 2); R = c(1, 3)
IC2mm(L, R)
file.remove("IC2ell")
file.remove("IC2ell.r")
file.remove("R/IC2ell.r")
document()
file.rename("R/ltnmm.r", "R/LTNmm.r")
file.rename("R/CZIGPmm.r", "R/ZIGPmm.r")
file.remove("R/LTNell.r")
file.remove("R/MZIGPell.r")
file.remove("R/PETell.r")
file.rename("R/IC2mm.r", "R/IC2mm.R")
file.rename("R/LTNmm.r", "R/LTNmm.R")
file.rename("R/ZIGPmm.r", "R/ZIGPmm.R")
document()
document()
usethis::use_r("ZTB1mm.R")
document()
document()
usethis
usethis::use_r("ZTB2mm.R")
document()
file.rename("demo/ltn-demo.r", "demo/LTN-demo.R")
file.rename("demo/PET-demo.r", "demo/PET-demo.R")
file.rename("demo/ZIGP-demo.r", "demo/ZIGP-demo.R")
file.create("demo/IC2-demo.R")
file.create("demo/ZTB1-demo.R")
file.create("demo/ZTB2-demo.R")
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
N=500
RES = matrix(0,N,4)
for(i in 1:N)
{
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
pi = 0.1
result = ZTB1mm(m,th,y)
RES[i,] = c(result$k, result$ELL, result$th, result$mse)
}
MRES = apply(RES,2,mean)
MRES
rm(list=ls())
setwd("C:/code")
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
pi = 0.1
result = ZTB1mm(m,th,y)
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
th = 0.1
result = ZTB1mm(m,th,y)
c(result$k, result$ELL, result$th, result$mse)
rm(list=ls())
setwd("C:/code")
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
N=500
RES = matrix(0,N,4)
for(i in 1:N)
{
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
th = 0.1
result = ZTB1mm(m,th,y)
RES[i,] = c(result$k, result$ELL, result$th, result$mse)
}
MRES = apply(RES,2,mean)
MRES
ZTB_sample <- function(m,th,n)
{
x <- rep(0,n)
for(i in 1:n)
{
repeat
{  a <- rbinom(1,m,th)
if(a>0)   break}
x[i] <- a
}
return(x)
}
N=500
RES = matrix(0,N,4)
for(i in 1:N)
{
n = 200
m = 10
th0 = 0.6
y = ZTB_sample(m,th0,n)
th = 0.1
result = ZTB2mm(m,th,y)
RES[i,] = c(result$k, result$ELL, result$th, result$mse)
}
MRES = apply(RES,2,mean)
MRES
rm(list=ls())
setwd("C:/code")
LTN_sample <- function(a, mu, si2, n)
{
x <- rep(0,n)
for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
a = 0; n = 1000; mu = 0.5; si2 = 0.5
y = LTN_sample(a, mu, si2, n)
result <- LTNmm(a, mu, si2, y)
result
rm(list=ls())
setwd("C:/code")
LTN_sample <- function(a, mu, si2, n)
{
x <- rep(0,n)
for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
a = 0; n = 1000; mu = 0.5; si2 = 0.5
y = LTN_sample(a, mu, si2, n)
mu = 1; si2 = 1
result <- LTNmm(a, mu, si2, y)
result
y
model.matrix(y~ X - 1, y)
model.matrix(y)
model.matrix(y~1, y)
model.matrix(y ~ 1, y)
model.matrix(y ~ 1)
X <- model.matrix(y ~ 1)
lm_mod <- lm(y ~ X - 1)
lm_mod
summary(lm_mod)$sigma
coef(lm_mod)
log(summary(lm_mod)$sigma))
log(summary(lm_mod)$sigma)
rm(list=ls())
setwd("C:/code")
LTN_sample <- function(a, mu, si2, n)
{
x <- rep(0,n)
for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
a = 0; n = 1000; mu = 0.5; si2 = 0.5
y = LTN_sample(a, mu, si2, n)
X <- model.matrix(y ~ 1)
lm_mod <- lm(y ~ X - 1)
mu = coef(lm_mod); si2 = log(summary(lm_mod)$sigma)
result <- LTNmm(a, mu, si2, y)
si2
mu
mu = 0.7888218
result <- LTNmm(a, mu, si2, y)
LTNmm(a, mu, si2, y)
si2
mu
a
c(unname(coef(lm_mod)), log(unname(summary(lm_mod)$sigma)))
mean(y)
summary(lm_mod)$sigma
LTNmm(a, mu, si2, y)
LTN_sample <- function(a, mu, si2, n)
{
x <- rep(0,n)
for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
a = 5; n = 200; mu = 7; si2 = 4
y = LTN_sample(a, mu, si2, n)
mu = 1; si2 = 1
result <- LTNmm(a, mu, si2, y)
LTNmm <- function(a, mu, si2, y)
{
k = 1
error = 3
n = length(y)
alpha0 = c(mu,si2)
si = sqrt(si2)
# log-likelihood function
log_ell <- -n*log(si2)/2-sum((y-mu)^2)/(2*si2)-n*log(1-pnorm((a-mu)/si))
el = c(log_ell)
while (error > 1e-06)
{
a1 = (a-mu)/si
w = 1-pnorm(a1)
s1 = (1-w)/w
tao = exp(-(a-mu)^2/(2*si2))/sqrt(2*pi*si2)
g = tao/pnorm(a1)
deta = si2 - si2*(a-mu)*g
mu1 = (mean(y)+s1*(mu-si2*g))/(1+s1)
deta = si2 + (mu1-mu)^2 - si2*(a+mu-2*mu1)*g
mu = mu1
si2 = ( sum((y-mu)^2)/n + s1*deta )/(1+s1)
si = sqrt(si2)
log_el <- -n*log(si2)/2-sum((y-mu)^2)/(2*si2)-n*log(1-pnorm((a-mu)/si))
el <- append(el, log_el)
error = abs(el[k+1]-el[k])/(abs(el[k])+1)
k = k+1
}
ELL = el[length(el)]
alpha = c(mu,si2)
mse = sum( (alpha-alpha0)^2 )/2
result <- list()
result$k <- k
result$ELL <- ELL
result$alpha <- alpha
result$mse <- mse
return(result)
}
result <- LTNmm(a, mu, si2, y)
result
a = 0; n = 200; mu = 0.5; si2 = 0.5
y = LTN_sample(a, mu, si2, n)
mu = 1; si2 = 1
LTNmm(a, mu, si2, y)
a = 0; n = 1000; mu = 0.5; si2 = 0.5
y = LTN_sample(a, mu, si2, n)
mu = 1; si2 = 1
LTNmm(a, mu, si2, y)
