y
ZIGPmm(y, phi0, phi, la, th)
ZIGPFx(phi0, phi, la, th)
-n*ZIGPFx(phi0, phi, la, th)
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 1000
m = 2
phi0 = 0.1
phi = rep(1,m)
la = rep(2,m)
th = rep(0.3,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.1
phi = rep(1,m)
la = rep(1.6,m)
th = rep(0.2,m)
result <- ZIGPmm(y, phi0, phi, la, th)
ZIGPmm(y, phi0, phi, la, th)
ZIGPFx(phi0, phi, la, th)
rm(list=ls())
liberary(devtool)
library(devtools)
load_all()
file.rename("ZIGPFx.R", "CZIGPFx.R")
file.rename("ZIGPFx.R", "R/CZIGPFx.R")
file.rename("ZIGPFx.R", "CZIGPFx.R")
file.rename("ZIGPFx.R", "CZIGPFx.R")
file.rename("R/ZIGPFx.R", "R/CZIGPFx.R")
file.rename("R/ZIGP_CRate.R", "R/CZIGP_CRate.R")
file.rename("R/ZIGPQx.R", "R/CZIGPQx.R")
file.rename("R/summary.ZIGP.R", "R/summary.CZIGP.R")
document()
file.rename("R/ZIGPmm.R", "R/CZIGPmm.R")
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
document()
library(devtools)
load_all()
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 5
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
library(devtools)
load_all()
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
m = 3
n = 400
m = 3
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
n = 400
m = 5
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
library(devtools)
load_all()
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
document()
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPmm(y, phi0, phi, la, th)
summary.CZIGP(result)
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 10
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
n = nrow(y)
m = length(la)
zero = matrix(0,n,m)
yz = apply(1*(y==zero),1,prod)
n0 = sum(yz)
yz
Iy = 1-yz
Iy
n0
sum(Iy)
n
sum(Iy*(y[,i]!=0))
sum(Iy*(y[,1]!=0))
sum(Iy*(y[,2]!=0))
y
Iy
sum(Iy*(y==0)*la)
sum(Iy*(y[,2]!=0))
n0
library(devtools)
load_all()
usethis::use_r("ZIGPmm.R")
usethis::use_r("ZIGPFx.R")
usethis::use_r("ZIGPQx.R")
usethis::use_r("ZIGP_Rate.R")
usethis::use_r("summary.ZIGP.R")
document()
file.rename("R/summary.R", "R/summary.ZIGP.R")
file.rename("demo/ZIGP-demo.R", "demo/CZIGP-demo.R")
file.create("demo/ZIGP-demo.r")
ZIGP_sample <- function(phi0, la, th, n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
# Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 3
phi0 = 0.4
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, la,th,n)
phi0 = 0.5
la = rep(1,m)
th = rep(0.1,m)
result <- ZIGPmm(y, phi0, la, th)
library(devtools)
load_all()
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 3
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.5
phi = rep(0.5,m)
la = rep(1,m)
th = rep(0.1,m)
CZIGPFx(phi0, phi, la, th)
CZIGPFx(phi0, phi, la, th)
-n*CZIGPFx(phi0, phi, la, th)
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 400
m = 3
phi0 = 0.4
phi = rep(0.2,m)
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, phi,la,th,n)
CZIGPFx(phi0, phi, la, th)
-n*CZIGPFx(phi0, phi, la, th)
solve(Fisher_Matrix)
Fisher_Matrix <- -n*CZIGPFx(phi0, phi, la, th)
solve(Fisher_Matrix)
diag(solve(Fisher_Matrix))
